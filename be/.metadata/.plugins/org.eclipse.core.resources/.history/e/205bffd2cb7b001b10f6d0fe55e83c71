package com.example.demo.brd.controller;

import java.time.LocalDate;     
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;   
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;


import com.example.demo.brd.domain.Board;
import com.example.demo.brd.domain.BoardDto;
import com.example.demo.brd.repository.BoardRepository;
import com.example.demo.brd.service.BoardService;
import com.example.demo.brd.service.BoardServiceImpl;
import com.example.demo.cmm.controller.AbstractController;

import lombok.RequiredArgsConstructor;




@RestController
@RequiredArgsConstructor
@RequestMapping("/boards") 
public class BoardController extends AbstractController<Board>{
	private final BoardServiceImpl service;
	
	@PostMapping("/writter")
    public Map<?, ?> writer(@RequestBody Board t) {
		String date = String.format("%s %s", LocalDate.now(), LocalDateTime.now().format(DateTimeFormatter.ofPattern("a HH�떆 mm遺�")));
		Map<String, Object> map = new HashMap<>();
		System.out.println(date);
       Board b = service.save(t);
        return map;
    }
	
	@GetMapping("/list")
    public List<Board> list(){
        return service.findAll();
    }
	
	@GetMapping("/{title}")
	public List<BoardDto> findByTitle(@PathVariable String title) {
		return  null;
	}	
	
	@PutMapping("/update")
	public Map<?, ?> update(@RequestBody BoardDto b){
		var map = new HashMap<>();
		String date = String.format("%s %s", LocalDate.now(), LocalDateTime.now().format(DateTimeFormatter.ofPattern("a HH�떆 mm遺�")));
		return map;
	}
	
	@DeleteMapping("/delete")
	public Map<?, ?> delete(@RequestBody Board t){
		var map = new HashMap<>();
		service.delete(t);
		 return map;
		
	}


	

	
}
